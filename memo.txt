++++++++++++++++++++++++++++++++++++
* html+JavaScript+PHP,DB(MySQL)
* PHPの学習のためWebアプリケーション
++++++++++++++++++++++++++++++++++++

---------------------
# demo2画面の実装
---------------------
B bpmの調整(テンポの変更）
B パターンの選択
C 判定の調整
C 譜面表示速度の調整

[改善点]
・素早くキーボードを入力すると遅延する
・更新後、自動再生されない（何かしらの入力することで自動再生をスタートさせたい）

------------------
# demo3画面の実装
------------------
A チャージ（長押し）の実装（ハイハットオープンをイメージ）

------------------------
# demo2画面の実装(完了)
-------------------------
B テンポの表示??
A 60bpm、8ビートのリズムをキャンバスに分かる形で描画 ok
A 8ビートのリズムを譜面に表示 
  A 譜面の表示（4分音符の場合、拍ごとに罫線を表示） ..ok(12/10)
  B リズムの表示（例：ﾄﾞﾝﾀﾝﾄﾞﾄﾞﾀﾝ） ..ok(12/10)
A 入力の判定表示*スコアの更新..ok(12/10)
A 入力の判定..ok(12/10)
 参考：JavaScriptのrequestAnimationは約60fps
 1/60= 0.0166666..16.67ms
 入力タイミングの遅延があるので
 +-2レームまではGREAT
 +-7フレームまではGOOD
 +-9フレームまではBAD
 +-10フレーム以降はpoor
C 音の実装（テンポ）ok<12/20>
C 音の実装（キーボード入力）ok<12/20>
B テンポ音量の調整 ok<12/20>
B インプット音量の調整ok<12/20>
~~~~~~~~~~~~~~~~~~~

Q:某ゲームの入力判定の基準
A:
PGREAT ＋－16.67ms (＋－1フレ)
GREAT ＋－33.33ms (＋－2フレ)
GOOD ＋－116.67ms (＋－7フレ)

(参考：BPM@パプログ！)
https://papukiman.blog.fc2.com/blog-entry-5215.html?sp
~~~~~~~~~~~~~~~~~~~


-------------------------------------
Q:リズムパターンのデータ化するルール
  （リズムパターンを別ファイルのような形式で保持した方が、ファイルの使い回しが容易）
A:2進数で表す

例：ドンタンドドタン
ドン：バスドラム：1(shift)
タン：スネア：3(x)
10301130r4
r4:リピート4回

例：ドンタンドドタン（ハイハット有ver）
ドンタンドドタン
ﾁ ﾁ ﾁ ﾁ ﾁ ﾁ ﾁ ﾁ
チ：ハイハット：5(j)
65856685r4 X...6を叩くのと区別が付かない

重ねる場合は下のように2行にする
10301130 
55555555

--------------------------------------
# task
* C オープンハイハットを表現するためにチャージを実装したい
* A 時間を表示する
* A 音を鳴らす
* A ゲーム画面構成：demo
* A ゲーム画面構成：stairs challenge
* A ゲーム画面構成：rhythm pattern
* A キーボードの入力を記録する
* B キーボード入力設定を保持する 

# fature
* C 記録をサーバに送る機能


# demoの実装(入力を譜面に表示）11/25ok
  - inputの描写：入力したタイミングでキーを表示     
  - フレームの描画(白の細い線)
    - input keyのサイズ（width:20,height:40)
    - input keyの幅（width:30)
    - フレームの描画
      ctx.strokeRect(25,30,240,420);
      frame:
       左上(25,30),右下座標(265,450)
        width:240
        height:420

* memo画像を表示する...canvas
  - bpmを反映させたフレームの移動処理
    - 60bpm...1分間に4分音符を60回鳴らす速さ
    - canvasのサイズ(width:300px  height:500px)
    - フレームの高さは420
    - スピードの調整はよしなに
    - 1秒ごとに白線が入力に当たるようにする

     0~4秒で0~419に達する
     変数はnotesはNow.Date
     0~4秒の時間は、notes-startTime で求める
     4秒で419に達するには

     1秒:105(1000ミリ秒 :105)
     2秒:210
     3秒:315
     4秒:420
     1ミリ秒:0.105

https://soundeffect-lab.info/sound/button/
